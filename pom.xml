<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.xwiki.contrib</groupId>
    <artifactId>parent-platform</artifactId>
    <version>12.4</version>
  </parent>
  <artifactId>api-graphql</artifactId>
  <version>0.2</version>

  <name>XWiki GraphQL API</name>
  <description>GraphQL API to expose the XWiki model for usecases where REST is too verbose or produces too much back and forward between the client and the server.</description>

  <developers>
    <developer>
      <id>Enygma2002</id>
      <name>Eduard Moraru</name>
    </developer>
    <developer>
      <id>surli</id>
      <name>Simon Urli</name>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/xwiki-contrib/api-graphql.git</connection>
    <developerConnection>scm:git:git@github.com:xwiki-contrib/api-graphql.git</developerConnection>
    <url>https://github.com/xwiki-contrib/api-graphql/tree/master</url>
    <tag>api-graphql-0.2</tag>
  </scm>

  <properties>
    <smallrye-graphql.version>1.0.7</smallrye-graphql.version>
    <jandex.maven.plugin.version>1.1.0</jandex.maven.plugin.version>

    <!-- The server should only be installed at farm level so it can handle the URLs. -->
    <xwiki.extension.namespaces>{root}</xwiki.extension.namespaces>

    <!-- ClassFanOutComplexity issue in GraphqlApiResourceReferenceHandler. -->
    <xwiki.checkstyle.skip>true</xwiki.checkstyle.skip>

    <!-- Jira auto-release setup. -->
    <xwiki.release.jira.skip>false</xwiki.release.jira.skip>
    <xwiki.issueManagement.jira.id>GQL</xwiki.issueManagement.jira.id>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.xwiki.commons</groupId>
      <artifactId>xwiki-commons-component-default</artifactId>
      <version>${commons.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-oldcore</artifactId>
      <version>${platform.version}</version>
    </dependency>
    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-query-manager</artifactId>
      <version>${platform.version}</version>
    </dependency>

    <!-- GraphQL -->
    <dependency>
      <groupId>io.smallrye</groupId>
      <artifactId>smallrye-graphql</artifactId>
      <version>${smallrye-graphql.version}</version>
      <exclusions>
        <!-- FIXME: Something in XWiki is bringing antlr4-runtime-4.5.1-1.jar as a core extension, but graphql-java requires 
          4.7.2 so we should fix the XWiki dependency instead of excluding here and risking to hit a feature of the new version that 
          is really needed. -->
        <exclusion>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-runtime</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.smallrye</groupId>
      <artifactId>smallrye-graphql-schema-builder</artifactId>
      <version>${smallrye-graphql.version}</version>
    </dependency>

    <dependency>
      <groupId>org.xwiki.platform</groupId>
      <artifactId>xwiki-platform-container-servlet</artifactId>
      <version>${platform.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
      <version>1.1.6</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <version>1.1.6</version>
    </dependency>

    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>yasson</artifactId>
      <version>1.0.7</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Revapi backwards compatibility configuration/exclusions. -->
      <plugin>
        <groupId>org.revapi</groupId>
        <artifactId>revapi-maven-plugin</artifactId>
        <configuration>
          <analysisConfiguration><![CDATA[
            {
              "revapi": {
                "filter": {
                  // We're ignoring all API incompatibilities from XWiki dependencies (i.e. commons and rendering)
                  // since they're already covered by their own builds and we release all of them together.
                  "archives": {
                    "exclude": ["org\\.xwiki\\.commons:.*:.*", "org\\.xwiki\\.rendering:.*:.*"]
                  }
                },
                "ignore" : [
                  // Add more ignores below...
                  // Note: you can use regexes by using the syntax: { "regex": true, ... }
                  // Don't forget to '\'-escape dots and other special characters in this case ;)
                  {
                    "code": "java.method.exception.checkedAdded",
                    "old": "method com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::createOrUpdateDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws java.lang.Exception",
                    "new": "method com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::createOrUpdateDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xwiki.security.authorization.AuthorizationException, java.lang.Exception",
                    "exception": "org.xwiki.security.authorization.AuthorizationException",
                    "justification": "Young API: Clearer exceptions"
                  },
                  {
                    "code": "java.method.exception.checkedAdded",
                    "old": "method com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::getDocument(java.lang.String) throws java.lang.Exception",
                    "new": "method com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::getDocument(java.lang.String) throws org.xwiki.security.authorization.AuthorizationException, java.lang.Exception",
                    "exception": "org.xwiki.security.authorization.AuthorizationException",
                    "justification": "Young API: Clearer exceptions"
                  },
                  {
                    "code": "java.annotation.added",
                    "old": "parameter com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::createOrUpdateDocument(===java.lang.String===, java.lang.String, java.lang.String, java.lang.String, boolean) throws java.lang.Exception",
                    "new": "parameter com.xpn.xwiki.api.Document org.xwiki.contrib.graphql.GraphqlApi::createOrUpdateDocument(===java.lang.String===, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xwiki.security.authorization.AuthorizationException, java.lang.Exception",
                    "annotation": "@org.eclipse.microprofile.graphql.NonNull",
                    "justification": "Young API: Clearer exceptions"
                  }
                ]
              }
            }
          ]]></analysisConfiguration>
        </configuration>
      </plugin>

      <!-- Unpack the oldcore API classes so that they will be part of the jandex index. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <!-- Jandex runs at 'process-classes', so we need to copy the jar before that. -->
            <phase>process-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.xwiki.platform</groupId>
                  <artifactId>xwiki-platform-oldcore</artifactId>
                  <includes>com/xpn/xwiki/api/*.class</includes>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Index the target/classes folder containing the oldcore API classes and the current project's classes. -->
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>${jandex.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Clean the temporary oldcore API classes folder before packaging, since we don't want it part of the final jar. -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-platform-classes</id>
            <!-- Just before the package is built. -->
            <phase>prepare-package</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.build.directory}/classes/com</directory>
                </fileset>
              </filesets>
              <!-- Make sure not to delete target/classes by mistake, as it is the default. -->
              <excludeDefaultDirectories>true</excludeDefaultDirectories>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>